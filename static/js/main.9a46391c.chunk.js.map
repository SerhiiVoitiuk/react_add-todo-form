{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","_ref","user","_jsx","className","href","concat","email","children","name","TodoInfo","todo","_jsxs","id","classNames","completed","title","TodoList","todos","map","username","getUserByid","userId","usersFromServer","find","initialTodos","_objectSpread","App","_useState","useState","_useState2","_slicedToArray","setTodos","_useState3","_useState4","setTitle","_useState5","_useState6","isTitleError","setIsTitleError","_useState7","_useState8","setUserId","_useState9","_useState10","isUserIdError","setIsUserIdError","action","method","onSubmit","event","preventDefault","_toConsumableArray","Math","max","apply","htmlFor","type","value","onChange","sanitizeTitle","target","replace","trimStart","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a46391c.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todos } from '../../types/Todos';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todos;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todos } from '../../types/Todos';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todos[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todos } from './types/Todos';\n\nfunction getUserByid(userId: number): User | null {\n  return usersFromServer.find(user => user?.id === userId)\n    || null;\n}\n\nconst initialTodos: Todos[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserByid(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const [title, setTitle] = useState('');\n  const [isTitleError, setIsTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [isUserIdError, setIsUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const sanitizeTitle\n      = event.target.value.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n\n    setTitle(sanitizeTitle.trimStart());\n    setIsTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setIsUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n    setIsUserIdError(false);\n    setIsTitleError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsTitleError(!title);\n    setIsUserIdError(!userId);\n\n    if (!userId || !title) {\n      return;\n    }\n\n    setTodos([\n      ...todos,\n      {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        userId,\n        completed: false,\n        user: getUserByid(userId),\n      },\n    ]);\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            id='title\"'\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Enter a title\"\n          />\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user-id\">User: </label>\n\n          <select\n            id=\"user-id\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}